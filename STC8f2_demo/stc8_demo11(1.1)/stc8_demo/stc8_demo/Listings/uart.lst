C51 COMPILER V9.60.0.0   UART                                                              10/13/2020 20:08:46 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart
                    -.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          
   2          #include <stdio.h>
   3          #include "stc8.h"
   4          #include <intrins.h>
   5          #include "uart.h"
   6          
   7          
   8          //´®¿Ú
   9          #define  uchar unsigned char
  10          
  11          #define FOSC            24000000UL
  12          #define BRT             (65536 - FOSC / 9600 / 4)//64911
  13          
  14          unsigned char Receive_count = 0;  //½ÓÊÕ¼ÆÊý
  15          bit UART1_Overflow_Flag = 0;          //»º³åÇøÂú±êÖ¾                        ÀûÓÚ·Ö±æÁ©×´Ì¬¼°·À³åÍ» ½ÓÊÕÊý¾Ý ºÍ ±È½ÏÊý¾Ý×öÏ
             -àÓ¦¶¯×÷           
  16          unsigned char UART1_Recv_Buf[UART_BUF_LEN] = {0};  //´®¿Ú½ÓÊÕ»º³åÇø  ¹²16¸öÊý¾Ý³ÉÔ±
  17          
  18          void UartSendStr(unsigned char *str);
  19          
  20          /*
  21            ÖÐ¶ÏÊÕ·¢Êý¾Ý
  22          */
  23          void UART1_Isr() interrupt 4 using 1                                      /*Ä¿²âÖÕ¶Ë·¢ËÍPELCO_D¸ñÊ½Êý¾Ý , ¼°½øusart1½ÓÊÕÖÐ¶Ï¸
             -³ÖµUART1_Recv_Buf , ½øÖ÷º¯ÊýÅÐ¶ÏÊÇÉ¶¶¯×÷Êý¾Ý*/
  24          {
  25   1      
  26   1        if(RI)    //½ÓÊÕÖÐ¶Ï±êÖ¾Î»ÅÐ¶Ï                                            Ó²¼þÖÃÒ»                          
  27   1        {
  28   2          RI = 0; //ÇåÖÐ¶Ï±êÖ¾                                                    Èí¼þÇåÁã
  29   2          if(!UART1_Overflow_Flag)                                              //Ã»Êý¾Ý¾Í½øÀ´
  30   2          {
  31   3            if(Receive_count < UART_BUF_LEN)                                    //(½ÓÊÕ´ÎÊý0   <   15)
  32   3            {
  33   4              UART1_Recv_Buf[Receive_count++] = SBUF;                           //½«Êý¾Ý¼Ä´æÆ÷µÄÖµ´æ·Åµ½ UART1_Recv_
             -Buf
  34   4              /* '\r' == 0x0a    '\n' == 0x0d */  // 01234567
  35   4              if(SBUF == '\r' || SBUF == '\n' || Receive_count >= 7)            //Èç¹ûµÈÓÚ¡®\R¡¯¡®\N¡¯¼°  '½ÓÊÕÍêµÚ0~7Î»Êý
             -¾Ý²Å¿ÉÒÔ'¶¼¿É½øÈë
  36   4              {
  37   5                UART1_Overflow_Flag = 1;                                        //¹Ø±Õ´®¿ÚÖÐ¶Ï,Í£Ö¹½ÓÊÕ ²¢Ìøµ½Ö÷º¯ÊýÖ´ÐÐÓï¾ä
  38   5              }
  39   4            }
  40   3            else
  41   3            {
  42   4                UART1_Overflow_Flag = 1;   //¹Ø±Õ´®¿ÚÖÐ¶Ï,Í£Ö¹½ÓÊÕ
  43   4            }
  44   3          }
  45   2        }
  46   1      }
  47          
  48          
  49          /*
  50            ´®¿Ú·¢ËÍÒ»¸ö×Ö½Ú
C51 COMPILER V9.60.0.0   UART                                                              10/13/2020 20:08:46 PAGE 2   

  51          */
  52          void UartSendByte(unsigned char dat)
  53          {
  54   1        SBUF = dat; //·¢ËÍÊý¾Ý
  55   1        while(!TI); //µÈ´ý·¢ËÍÍê³É
  56   1        TI = 0;     //ÇåÁã·¢ËÍ±êÖ¾Î»
  57   1      }
  58          
  59          
  60          /*
  61            ´®¿Ú·¢ËÍ×Ö·û´®Êý¾Ý
  62          */
  63          void UartSendStr(unsigned char *str)
  64          {
  65   1        while(*str != '\0')
  66   1        {
  67   2          UartSendByte(*str);
  68   2          str++;
  69   2        }
  70   1      }
  71          
  72          
  73          /*
  74            ´®¿Ú°´×Ö·û´®³¤¶È·¢ËÍ×Ö·û´®Êý¾Ý
  75          */
  76          void UartSend(unsigned char *str ,unsigned char len)
  77          {
  78   1        while(len--)
  79   1        {
  80   2          UartSendByte(*str);
  81   2          str++;
  82   2        }
  83   1      }
  84          
  85          
  86          /*
  87            ´®¿Ú½ÓÊÕÒ»¸ö×Ö½ÚÊý¾Ý
  88          */
  89          unsigned char ReceiveByte(void)
  90          {
  91   1        unsigned char rbyte;
  92   1        while(!RI); //²éÑ¯½ÓÊÕ±êÖ¾Î»£¬ÊÇ·ñÓÐÊý¾Ýµ½´ï»º³åÇø
  93   1        RI = 0;         //ÇåÁã½ÓÊÕ±êÖ¾Î»
  94   1        rbyte = SBUF;   //´Ó»º³åÇø¶ÁÈ¡Êý¾Ý
  95   1        return rbyte;
  96   1      }
  97          
  98          
  99          
 100          void ReceiveByteStr(unsigned char *str)
 101          {
 102   1        while(*str != '\0')
 103   1        {
 104   2          *str = ReceiveByte();
 105   2          str++;
 106   2        }
 107   1      }
 108          
 109          
 110          
 111          
 112          /*
C51 COMPILER V9.60.0.0   UART                                                              10/13/2020 20:08:46 PAGE 3   

 113             ´®¿Ú1³õÊ¼»¯
 114             115200bps @24.000MHz
 115          */
 116          void UART1_Init(void)
 117          { 
 118   1        SCON = 0x50;
 119   1        /*´®¿Ú1¿ØÖÆ¼Ä´æÆ÷     0x50: 0101 0000
 120   1          SM0=0; SM1=1;  ¹¤×÷Ä£Ê½1£¨¿É±ä²¨ÌØÂÊ8Î»Êý¾Ý·½Ê½£©
 121   1          SM2=0;         ÎÞÂÛÊÕµ½£¨RB8£©Îª0/1 ´®¿ÚÊý¾Ý¼Ä´æÆ÷£¨SBUF£©¶¼¿É½ÓÊÕµ½ÐÅÏ¢
 122   1          REN=1;         ÔÊÐí´®¿Ú½ÓÊÕÊý¾Ý
 123   1          TB8=0;RB8=0;   Ä£Ê½0/1¸ÃÁ©Î»²»ÓÃ
 124   1          T1             ·¢ËÍÖÐ¶ÏÇëÇó±êÖ¾£¨Ä£Ê½0; ·¢ËÍÍê³ÉÓ²¼þ½«T1ÖÃÒ»£¬ÏòCPU·¢ËÍÖÐ¶ÏÇëÇó,ÐèÈí¼þÇåÁã£©
 125   1          R1             ½ÓÊÕÖÐ¶ÏÇëÇó±êÖ¾£¨Ä£Ê½0; ½ÓÊÕÍê³ÉÓ²¼þ½«R1ÖÃÒ»£¬ÏòCPU·¢ËÍÖÐ¶ÏÇëÇó,ÐèÈí¼þÇåÁã£©
 126   1        */
 127   1        T2L = BRT;    //65536 - 24000000 / 115200 / 4 = 0FFCCH  (9600->FD8F)
 128   1        T2H = BRT >> 8;     
 129   1        /*bBT=(65536 - FOSC / 9600 / 4)==64911==1111 1101 1000 1111
 130   1          ¶¨Ê±Æ÷2¼ÆÊý¼Ä´æÆ÷£¨16Î»ÖØÔØ,·Ö¸ßµÍÎ».T2L¸ºÔðµÍ8Î»,T2H¸ºÔð¸ß8Î»;£©
 131   1        */
 132   1        AUXR = 0x15;
 133   1        /*
 134   1          0001 0101
 135   1          TR2=1;  £¨¶¨Ê±Æ÷2ÔËÐÐ¿ØÖÆÎ»£©         ¶¨Ê±Æ÷2¿ªÊ¼¼ÆÊý
 136   1        T2_C/T=0;                             0£º¶¨Ê±Æ÷£»£¨¶ÔÄÚ²¿Ê±ÖÓ½øÐÐ¼ÆÊý£©1£º¼ÆÊýÆ÷;£¨£©
 137   1          T2x12=1;£¨¶¨Ê±Æ÷2ËÙ¶È¿ØÖÆÎ»£©         T1Ä£Ê½£¨¼´CPUÊ±ÖÓ²»·ÖÆµ FOSC/1£©
 138   1          S1ST2=1;£¨´®¿Ú1²¨ÌØÂÊ·¢ÉäÆ÷Ñ¡ÔñÎ»£©   Ñ¡Ôñ¶¨Ê±Æ÷2×÷Îª²¨ÌØÂÊ·¢ÉäÆ÷
 139   1          T3/T4ÓÚT2Ò»Ñù,Ò²¿ÉÒÔµ±´®¿ÚµÄ²¨ÌØÂÊ·¢ÉúÆ÷ºÍ¿É±à³ÌÊ±ÖÓÊä³ö          */
 140   1        
 141   1        ES = 1;       //ÔÊÐíÊ¹ÄÜ´®¿ÚÖÐ¶Ï
 142   1        EA = 1;       //CPU¿ª·ÅÖÐ¶Ï
 143   1        
 144   1      }
 145          
 146          
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    167    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
